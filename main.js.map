{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/scripts/components/Card.js","webpack://yandex_praktikum/./src/scripts/components/FormValidator.js","webpack://yandex_praktikum/./src/scripts/components/Section.js","webpack://yandex_praktikum/./src/scripts/components/UserInfo.js","webpack://yandex_praktikum/./src/scripts/components/Popup.js","webpack://yandex_praktikum/./src/scripts/components/PopupWithForm.js","webpack://yandex_praktikum/./src/scripts/components/PopupWithImage.js","webpack://yandex_praktikum/./src/scripts/components/Api.js","webpack://yandex_praktikum/./src/scripts/utils/constants.js","webpack://yandex_praktikum/./src/pages/index.js"],"sourcesContent":["export default class Card {\r\n  constructor(\r\n    { name, link, likes, _id, owner },\r\n    userId,\r\n    handleCardClick,\r\n    handleLikeCard,\r\n    cardSelector\r\n  ) {\r\n    // debugger;\r\n    this._title = name;\r\n    this._image = link;\r\n    this._likes = likes;\r\n    this._id = _id;\r\n    this._owner = owner;\r\n    this._userId = userId;\r\n    this._handleCardClick = handleCardClick;\r\n    this._handleLikeCard = handleLikeCard;\r\n    this._countLike = this._likes.length;\r\n    this._cardSelector = cardSelector;\r\n  }\r\n\r\n  _getTemplate() {\r\n    const newCard = document\r\n      .querySelector(this._cardSelector)\r\n      .content.querySelector('.card')\r\n      .cloneNode(true);\r\n\r\n    return newCard;\r\n  }\r\n\r\n  generateCard() {\r\n    this._element = this._getTemplate();\r\n\r\n    this._cardImage = this._element.querySelector('.card__image');\r\n    this._cardTitle = this._element.querySelector('.card__name');\r\n    this._buttonLike = this._element.querySelector('.card__like-button');\r\n    this._likeCounter = this._element.querySelector('.card__like-count');\r\n    this._buttonDelete = this._element.querySelector('.card__trach-icon');\r\n\r\n    this._cardImage.src = this._image;\r\n    this._cardImage.alt = this._title;\r\n    this._cardTitle.textContent = this._title;\r\n    this._likeCounter.textContent = this._likes.length;\r\n\r\n    if (this._owner._id !== this._userId) {\r\n      // debugger;\r\n      this._buttonDelete.remove();\r\n    }\r\n\r\n    if (this._likes.some((likeUser) => likeUser._id === this._userId)) {\r\n      this._buttonLike.classList.add('card__like-button_active');\r\n    }\r\n    this._setEventListeners();\r\n    return this._element;\r\n  }\r\n\r\n  addLike(isLike) {\r\n    if (isLike) {\r\n      this._buttonLike.classList.add('card__like-button_active');\r\n      this._likeCounter.textContent = String(this._countLike + 1);\r\n      this._countLike += 1;\r\n      // debugger;\r\n    } else {\r\n      this._buttonLike.classList.remove('card__like-button_active');\r\n      this._likeCounter.textContent = String(this._countLike - 1);\r\n      this._countLike -= 1;\r\n    }\r\n  }\r\n\r\n  _handleDeleteCard = () => {\r\n    // удалить карточку\r\n    this._element.remove();\r\n    this._element = null;\r\n  };\r\n\r\n  // _handleLikeCard = () => {\r\n  //   // лайкнуть карточку\r\n  //   this._buttonLike.classList.toggle('card__like-button_active');\r\n  // };\r\n\r\n  _setEventListeners() {\r\n    this._cardImage.addEventListener('click', () => {\r\n      this._handleCardClick(this._title, this._image);\r\n    }); // открыть фотографию карточки\r\n    this._buttonDelete.addEventListener('click', this._handleDeleteCard); // удалить карточку\r\n    this._buttonLike.addEventListener('click', () => {\r\n      this._handleLikeCard(\r\n        this,\r\n        this._buttonLike.classList.toggle('card__like-button_active')\r\n      );\r\n    }); // лайкнуть карточку\r\n  }\r\n}\r\n","export default class FormValidator {\r\n  constructor(obj, formElement) {\r\n    this._formSelector = obj.formSelector;\r\n    this._inputSelector = obj.inputSelector;\r\n    this._inputErrorClass = obj.inputErrorClass;\r\n    this._submitButtonSelector = obj.submitButtonSelector;\r\n    this._inactiveButtonClass = obj.inactiveButtonClass;\r\n    this._errorClass = obj.errorClass;\r\n    this._formElement = formElement;\r\n    this._buttonElement = this._formElement.querySelector(\r\n      this._submitButtonSelector\r\n    );\r\n    this._inputList = Array.from(\r\n      this._formElement.querySelectorAll(this._inputSelector)\r\n    );\r\n  }\r\n\r\n  // показать ошибку\r\n  _showInputError = (inputElement) => {\r\n    const errorElement = this._formElement.querySelector(\r\n      `.${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorElement.classList.add(this._errorClass);\r\n    errorElement.textContent = inputElement.validationMessage;\r\n  };\r\n\r\n  // спрятать ошибку\r\n  _hideInputError = (inputElement) => {\r\n    const errorElement = this._formElement.querySelector(\r\n      `.${inputElement.id}-error`\r\n    );\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorElement.classList.remove(this._errorClass);\r\n    errorElement.textContent = '';\r\n  };\r\n\r\n  // проверить валидность поля ввода\r\n  _hasInvalidInput = () => {\r\n    return this._inputList.some((inputElement) => {\r\n      return !inputElement.validity.valid;\r\n    });\r\n  };\r\n\r\n  // показать|убрать сообщение об ошибки\r\n  _checkInputValidity = (inputElement) => {\r\n    if (!inputElement.validity.valid) {\r\n      // если ошибка\r\n      this._showInputError(inputElement);\r\n    } else {\r\n      // если ошибок нет\r\n      this._hideInputError(inputElement);\r\n    }\r\n  };\r\n\r\n  // установтиь слушателя событий\r\n  _setEventListeners = () => {\r\n    this.toggleButtonState();\r\n\r\n    this._formElement.addEventListener('submit', (evt) => {\r\n      // ! Эта строчка отменяет стандартную отправку формы.\r\n      evt.preventDefault();\r\n    });\r\n\r\n    this._inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        this._checkInputValidity(inputElement);\r\n        this.toggleButtonState();\r\n      });\r\n    });\r\n  };\r\n\r\n  // включить|отключить кнопку\r\n  toggleButtonState = () => {\r\n    if (this._hasInvalidInput()) {\r\n      this._buttonElement.disabled = true;\r\n      this._buttonElement.classList.add(this._inactiveButtonClass);\r\n    } else {\r\n      this._buttonElement.disabled = false;\r\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\r\n    }\r\n  };\r\n\r\n  // включить валидацию форм\r\n  enableValidation = () => {\r\n    this._setEventListeners();\r\n  };\r\n\r\n  // обнулить ошибки\r\n  resetValidation = () => {\r\n    this._inputList.forEach((inputElement) => {\r\n      this._hideInputError(inputElement);\r\n    });\r\n    this.toggleButtonState();\r\n  };\r\n}\r\n","export default class Section {\r\n  constructor(renderer, containerSelector) {\r\n    this._renderer = renderer;\r\n    this._container = document.querySelector(containerSelector);\r\n  }\r\n\r\n  // addItems(data) {\r\n  //   this._rendererItems = data;\r\n  // }\r\n\r\n  // принимает DOM-элемент и добавляет его в контейнер\r\n  addItem(data) {\r\n    // debugger;\r\n    this._container.prepend(data);\r\n  }\r\n\r\n  // метод, который отвечает за отрисовку всех элементов\r\n  renderItems(items) {\r\n    // debugger;\r\n    items.reverse().forEach((item) => {\r\n      const element = this._renderer(item);\r\n      this.addItem(element);\r\n    });\r\n  }\r\n}\r\n","export default class UserInfo {\r\n  constructor({ userName, userAbout, userAvatar}) {\r\n    this._userName = userName;\r\n    this._userAbout = userAbout;\r\n    this._userAvatar = userAvatar;\r\n  }\r\n\r\n  // возвращает объект с данными пользователя\r\n  getUserInfo() {\r\n    // debugger;\r\n    return {\r\n      name: this._userName.textContent,\r\n      about: this._userAbout.textContent,\r\n      avatar: this._userAvatar.src,\r\n    };\r\n  }\r\n\r\n  // принимает новые данные пользователя и добавляет их на страницу\r\n  setUserInfo(data) {\r\n    this._userName.textContent = data.name;\r\n    this._userAbout.textContent = data.about;\r\n    this._userAvatar.src = data.avatar;\r\n    this._id = data._id;\r\n  }\r\n}\r\n","export default class Popup {\r\n  constructor(popupName) {\r\n    this._popup = popupName;\r\n    this._handleEscClose = this._handleEscClose.bind(this);\r\n  }\r\n\r\n  // закрыть попап по нажатию Escape\r\n  _handleEscClose(evt) {\r\n    if (evt.key === 'Escape') {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  // слушатель событий\r\n  setEventListeners() {\r\n    this._popup.addEventListener('mousedown', (evt) => {\r\n      // модальное окно закрываеться при нажатии на затемнунную область вокруг формы\r\n      // или по нажатию кнопки закрыть \"Х\"\r\n      if (\r\n        evt.target === evt.currentTarget ||\r\n        evt.target.classList.contains('popup__close')\r\n      ) {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n\r\n  // открыть попап, добавить слушателя клавиш клавиатуры\r\n  open() {\r\n    document.addEventListener('keydown', this._handleEscClose);\r\n    this._popup.classList.add('popup_opened');\r\n  }\r\n\r\n  // закрыть попап, удалить слушателя клавиш клавиатуры\r\n  close() {\r\n    document.removeEventListener('keydown', this._handleEscClose);\r\n    this._popup.classList.remove('popup_opened');\r\n  }\r\n}\r\n","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithForm extends Popup {\r\n  constructor(popupSelector, popupSubmit) {\r\n    super(popupSelector);\r\n    this._popupForm = this._popup.querySelector('.form');\r\n    this._inputList = Array.from(\r\n      this._popupForm.querySelectorAll('.form__input')\r\n    );\r\n    this._submitButton = this._popup.querySelector('.form__submit');\r\n    this._popupSubmit = popupSubmit;\r\n  }\r\n\r\n  // приватный метот, собирает данные всех полей форм\r\n  _getInputValues() {\r\n    this._formValues = {};\r\n\r\n    this._inputList.forEach(\r\n      (input) => (this._formValues[input.name] = input.value)\r\n    );\r\n    return this._formValues;\r\n  }\r\n\r\n  // перезапись родительского метода setEventListeners\r\n  // добавляет обработчик submit формы\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._popupForm.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n      this._popupSubmit(this._getInputValues());\r\n      this.close();\r\n    });\r\n  }\r\n\r\n  loading(isLoad) {\r\n    if (isLoad) {\r\n      this._submitButton.textContent = 'Сохранение...';\r\n    } else {\r\n      this._submitButton.textContent = this._submitButtonText;\r\n    }\r\n  }\r\n\r\n  close() {\r\n    super.close();\r\n    this._popupForm.reset();\r\n  }\r\n}\r\n","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithImage extends Popup {\r\n  constructor(popupSelector) {\r\n    super(popupSelector);\r\n    this._imagePhoto = document.querySelector('.photo-container__photo');\r\n    this._imageTitle = document.querySelector('.photo-container__photo-title');\r\n  }\r\n\r\n  // перезаписывает родительский метод open\r\n  // вставляет в попап карточки изображение,\r\n  // альтернативное название и подпись картинке\r\n  open(name, link) {\r\n    this._imagePhoto.src = link;\r\n    this._imagePhoto.alt = name;\r\n    this._imageTitle.textContent = name;\r\n\r\n    super.open();\r\n  }\r\n}\r\n","export default class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._url = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkingResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getUsers() {\r\n    return fetch(`${this._url}/users`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  getUser() {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  editUserInfo(data) {\r\n    return fetch(`${this._url}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        about: data.job,\r\n      }),\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  editAvatar(data) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.src,\r\n      }),\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  getCards() {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'GET',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  createCard(data) {\r\n    return fetch(`${this._url}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.title,\r\n        link: data.src,\r\n      }),\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  deletCard(cardId) {\r\n    return fetch(`${this._url}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  putLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  deletLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }).then(this._checkingResponse);\r\n  }\r\n\r\n  getAllPromise() {\r\n    return Promise.all([this.getUser(), this.getCards()]);\r\n  }\r\n}\r\n","// *формы валидации\r\nconst validationConfig = {\r\n  formSelector: '.form',\r\n  inputSelector: '.form__input',\r\n  inputErrorClass: 'form__input_inactive',\r\n  submitButtonSelector: '.form__submit',\r\n  inactiveButtonClass: 'form__submit_disabled',\r\n  errorClass: 'form__input-error_active',\r\n};\r\n\r\n// *==== Cards ====\r\n// ?масив карточек\r\nconst initialCards = [\r\n  {\r\n    name: 'Архыз',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg',\r\n  },\r\n  {\r\n    name: 'Челябинская область',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg',\r\n  },\r\n  {\r\n    name: 'Иваново',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg',\r\n  },\r\n  {\r\n    name: 'Камчатка',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg',\r\n  },\r\n  {\r\n    name: 'Холмогорский район',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg',\r\n  },\r\n  {\r\n    name: 'Байкал',\r\n    link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg',\r\n  },\r\n];\r\n\r\n// !DOM элеиенты\r\n// * DOM попапы\r\nconst popupProfile = document.querySelector('.popup_type_profile');\r\nconst popupEditAvatar = document.querySelector('.popup_type_avatar');\r\nconst popupAddPhoto = document.querySelector('.popup_type_add-photo');\r\nconst popupConfirm = document.querySelector('.popup_type_confirm');\r\n// * находим в DOM кнопку редактирования профиля\r\nconst buttonEditProfile = document.querySelector('.profile__edit-button');\r\n// * находим в DOM кнопку редактирования аватара\r\nconst buttonEditAvatar = document.querySelector('.profile__avatar-edit');\r\n// ? поля в DOM имя и об авторе\r\nconst nameProfile = document.querySelector('.profile__title');\r\nconst jobProfile = document.querySelector('.profile__subtitle');\r\nconst avatarProfile = document.querySelector('.profile__avatar');\r\n// * находим в DOM кнопку добавления фотографии\r\nconst buttonAddPhoto = document.querySelector('.profile__add-button');\r\n// * Находим в DOM элементы карточки\r\nconst cardTemplate = '.card-template';\r\nconst popupPhoto = document.querySelector('.popup_type_photo');\r\n// * объявить form || input\r\n// ? форма редактирование профиля\r\nconst formProfile = document.querySelector('.form_edit-profile'); // форма редактирования профиля\r\nconst nameInput = formProfile.querySelector('.form__input_profile-name'); // поле ввода имени\r\nconst jobInput = formProfile.querySelector('.form__input_profile-job'); // поле ввода деятельности\r\n// ? форма редактирования аватара\r\nconst formAvatar = document.querySelector('.form_edit-avatar'); // форма редактирования аватарки\r\n// ? форма добавление карточки\r\nconst formPhoto = document.querySelector('.form_add-photo'); // форма добавления карточки\r\n\r\nconst API_CONFIG = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-44',\r\n  headers: {\r\n    authorization: '78b845d7-f9bb-43fd-9d7f-fb92a3c4ec96',\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\nexport {\r\n  validationConfig,\r\n  initialCards,\r\n  popupProfile,\r\n  popupEditAvatar,\r\n  popupAddPhoto,\r\n  popupConfirm,\r\n  buttonEditProfile,\r\n  buttonEditAvatar,\r\n  nameProfile,\r\n  jobProfile,\r\n  avatarProfile,\r\n  buttonAddPhoto,\r\n  cardTemplate,\r\n  popupPhoto,\r\n  formProfile,\r\n  nameInput,\r\n  jobInput,\r\n  formAvatar,\r\n  formPhoto,\r\n  API_CONFIG,\r\n};\r\n","import Card from '../scripts/components/Card.js';\r\nimport FormValidator from '../scripts/components/FormValidator.js';\r\nimport Section from '../scripts/components/Section.js';\r\nimport UserInfo from '../scripts/components/UserInfo.js';\r\nimport PopupWithForm from '../scripts/components/PopupWithForm.js';\r\nimport PopupWithImage from '../scripts/components/PopupWithImage.js';\r\nimport Api from '../scripts/components/Api.js';\r\nimport {\r\n  validationConfig,\r\n  initialCards,\r\n  popupProfile,\r\n  popupEditAvatar,\r\n  popupAddPhoto,\r\n  popupConfirm,\r\n  buttonEditProfile,\r\n  buttonEditAvatar,\r\n  nameProfile,\r\n  jobProfile,\r\n  avatarProfile,\r\n  buttonAddPhoto,\r\n  cardTemplate,\r\n  popupPhoto,\r\n  formProfile,\r\n  nameInput,\r\n  jobInput,\r\n  formAvatar,\r\n  formPhoto,\r\n  API_CONFIG,\r\n} from '../scripts/utils/constants.js';\r\nimport './index.css';\r\n\r\nconst api = new Api(API_CONFIG);\r\n\r\n// * валидация\r\nconst validateFormProfile = new FormValidator(validationConfig, formProfile);\r\nconst validateFormAvatar = new FormValidator(validationConfig, formAvatar);\r\nconst validateFormCard = new FormValidator(validationConfig, formPhoto);\r\n\r\nconst handleCardClick = (name, link) => {\r\n  // debugger;\r\n  openPhotoPopup.open(name, link);\r\n};\r\n\r\nconst handleLikeCard = (card, isLike) => {\r\n  // debugger;\r\n  const cardLiked = isLike ? api.putLike(card._id) : api.deletLike(card._id);\r\n  cardLiked\r\n    .then(() => {\r\n      // debugger;\r\n      card.addLike(isLike);\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n// * создать карточку\r\nconst createCard = (data) => {\r\n  // debugger;\r\n  const card = new Card(\r\n    data,\r\n    profile._id,\r\n    handleCardClick,\r\n    handleLikeCard,\r\n    cardTemplate\r\n  );\r\n  const cardElement = card.generateCard();\r\n\r\n  return cardElement;\r\n};\r\n\r\n// * отрисовка карт\r\nconst defaultCards = new Section(createCard, '.cards');\r\n\r\n// * рендер карт\r\n// const renderCard = (item) => {\r\n//   const cardElement = createCard(item);\r\n//   defaultCards.addItem(cardElement);\r\n// };\r\n\r\n// * попап картинки\r\nconst openPhotoPopup = new PopupWithImage(popupPhoto);\r\n\r\n// * попап добавление фотографии\r\nconst openAddPhotoPopup = new PopupWithForm(popupAddPhoto, (data) => {\r\n  openAddPhotoPopup.loading(true);\r\n\r\n  // debugger;\r\n  api\r\n    .createCard(data)\r\n    .then((res) => {\r\n      defaultCards.addItem(createCard(res));\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => openAddPhotoPopup.loading(false));\r\n});\r\n\r\n// * информация о авторе\r\nconst profile = new UserInfo({\r\n  userName: nameProfile,\r\n  userAbout: jobProfile,\r\n  userAvatar: avatarProfile,\r\n});\r\n\r\n// * попап редактирование профиля\r\nconst openPropfilePopup = new PopupWithForm(popupProfile, (data) => {\r\n  openPropfilePopup.loading(true);\r\n\r\n  api\r\n    .editUserInfo(data)\r\n    .then((res) => profile.setUserInfo(res))\r\n    .catch((err) => console.log(err))\r\n    .finally(() => openPropfilePopup.loading(false));\r\n});\r\n\r\nconst openAvatarPopup = new PopupWithForm(popupEditAvatar, (data) => {\r\n  openAvatarPopup.loading(true);\r\n\r\n  api\r\n    .editAvatar(data)\r\n    .then((res) => profile.setUserInfo(res))\r\n    .catch((err) => console.log(err))\r\n    .finally(() => openAvatarPopup.loading(false));\r\n});\r\n\r\n// ? события\r\n// ! popup редактировать профиль\r\nbuttonEditProfile.addEventListener('click', () => {\r\n  const getProfile = profile.getUserInfo();\r\n\r\n  nameInput.value = getProfile.name;\r\n  jobInput.value = getProfile.about;\r\n\r\n  validateFormProfile.resetValidation();\r\n  openPropfilePopup.open();\r\n});\r\n// ! popup редактировать аватара\r\nbuttonEditAvatar.addEventListener('click', () => {\r\n  validateFormAvatar.resetValidation();\r\n  openAvatarPopup.open();\r\n});\r\n// ! popup добавить фотографию\r\nbuttonAddPhoto.addEventListener('click', () => {\r\n  validateFormCard.resetValidation();\r\n  openAddPhotoPopup.open();\r\n});\r\n\r\napi\r\n  .getAllPromise()\r\n  .then(([userData, cardsData]) => {\r\n    profile.setUserInfo(userData);\r\n    // debugger;\r\n    defaultCards.renderItems(cardsData);\r\n  })\r\n  .catch((err) => console.log(err));\r\n\r\n// * включить валидация\r\nvalidateFormCard.enableValidation();\r\nvalidateFormProfile.enableValidation();\r\nvalidateFormAvatar.enableValidation();\r\n// * отрисовать карты\r\n// defaultCards.renderItems();\r\n// * открыть попап\r\nopenAddPhotoPopup.setEventListeners();\r\nopenPhotoPopup.setEventListeners();\r\nopenPropfilePopup.setEventListeners();\r\nopenAvatarPopup.setEventListeners();\r\n\r\n// api\r\n//   .getUsers()\r\n//   .then((res) => console.log(res))\r\n//   .catch((err) => console.log(err));\r\n\r\napi\r\n  .getUser()\r\n  .then((res) => console.log(res))\r\n  .catch((err) => console.log(err));\r\n\r\napi\r\n  .getCards()\r\n  .then((res) => console.log(res))\r\n  .catch((err) => console.log(err));\r\n"],"names":["Card","userId","handleCardClick","handleLikeCard","cardSelector","name","link","likes","_id","owner","_element","remove","this","_title","_image","_likes","_owner","_userId","_handleCardClick","_handleLikeCard","_countLike","length","_cardSelector","document","querySelector","content","cloneNode","_getTemplate","_cardImage","_cardTitle","_buttonLike","_likeCounter","_buttonDelete","src","alt","textContent","some","likeUser","classList","add","_setEventListeners","isLike","String","addEventListener","_handleDeleteCard","toggle","FormValidator","obj","formElement","inputElement","errorElement","_formElement","id","_inputErrorClass","_errorClass","validationMessage","_inputList","validity","valid","_hideInputError","_showInputError","toggleButtonState","evt","preventDefault","forEach","_checkInputValidity","_hasInvalidInput","_buttonElement","disabled","_inactiveButtonClass","_formSelector","formSelector","_inputSelector","inputSelector","inputErrorClass","_submitButtonSelector","submitButtonSelector","inactiveButtonClass","errorClass","Array","from","querySelectorAll","Section","renderer","containerSelector","_renderer","_container","data","prepend","items","reverse","item","element","addItem","UserInfo","userName","userAbout","userAvatar","_userName","_userAbout","_userAvatar","about","avatar","Popup","popupName","_popup","_handleEscClose","bind","key","close","target","currentTarget","contains","removeEventListener","PopupWithForm","popupSelector","popupSubmit","_popupForm","_submitButton","_popupSubmit","_formValues","input","value","_getInputValues","isLoad","_submitButtonText","reset","PopupWithImage","_imagePhoto","_imageTitle","Api","baseUrl","headers","_url","_headers","res","ok","json","Promise","reject","status","fetch","method","then","_checkingResponse","body","JSON","stringify","job","title","cardId","all","getUser","getCards","validationConfig","popupProfile","popupEditAvatar","popupAddPhoto","buttonEditProfile","buttonEditAvatar","nameProfile","jobProfile","avatarProfile","buttonAddPhoto","popupPhoto","formProfile","nameInput","jobInput","formAvatar","formPhoto","api","authorization","validateFormProfile","validateFormAvatar","validateFormCard","openPhotoPopup","open","card","putLike","deletLike","addLike","catch","err","console","log","createCard","profile","generateCard","defaultCards","openAddPhotoPopup","loading","finally","openPropfilePopup","editUserInfo","setUserInfo","openAvatarPopup","editAvatar","getProfile","getUserInfo","resetValidation","getAllPromise","userData","cardsData","renderItems","enableValidation","setEventListeners"],"sourceRoot":""}